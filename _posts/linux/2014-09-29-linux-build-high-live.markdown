---
layout: page
title:  "架构实践.高负载高并发电商网站"
description: "架构实践,高负载高并发电商网站,"
keywords: 架构实践,缓存,分布式,大数据
origin: 张嘉杰.原创
date:   2014-09-29
category: linux
tags: linux j2ee web database 高并发
---
最近公司面临改革（日事日毕，日清日高），从以前的点对点的开发模式，转战到平台的开发模式上来，显然是一次大变动呐。`基础代码架构`、`服务器`、`数据库`、`缓存`、`监控`、`搜索`、`服务`、`日志`都需要从新规划，下面我来说说关于架构一些想法。
<!--more-->

-----------------------

> 设计思路

<font color="#fa8072">1）多级缓存、静态化</font>

{% highlight html %}

1. 客户端页面缓存
2. 应用缓存（memcache）
3. 内存数据库（mongodb、redis）
4. cache机制（数据库、中间件）

{% endhighlight %}

<font color="#fa8072">2）高可用</font>

{% highlight html %}

1. 负载均衡、容灾、备份
2. 读写分离
3. 依赖关系（低耦合）
4. 监控

{% endhighlight %}

<font color="#fa8072">3）伸缩性</font>

{% highlight html %}

1. 对业务、数据库的拆分（异步非阻塞，可提高吞吐量）
2. 无状态（不依赖模块状态，可提高吞吐量）
3. 原子操作与并发控制（乐观锁、mutex、写时复制等等）
4. 容错隔离

{% endhighlight %}




> 应用架构

整个架构是分层的分布式的架构，纵向包括`CDN`，`反向代理`，`web应用`，`业务层`，`基础服务层`，`数据存储层`。水平方向包括对整个平台的`配置管理部署`和`监控`。

{% highlight html %}

+--------------------------------------------+ +--------+ +---------+
|                    CDN                     | | Config | | Monitor |
+--------------------------------------------+ +--------+ +---------+
+--------------------------------------------+ |        | |         |
|                   Nginx                    | | Deploy | |   Log   |
+--------------------------------------------+ |        | |         |
+--------------------------------------------+ +--------+ +---------+
|                    App                     | |        | |         |
+---+--------+--+------------+--+--------+---+ |        | |         |
|   +--------+  +------------+  +--------+   | |        | |         |
|   |Tomcat  |  |   Jboss    |  | Spring |   | |        | |         |
|   +--------+  +------------+  +--------+   | |        | |         |
+--------------------------------------------+ |        | | System  |
+--------------------------------------------+ |        | |         |
|                  Service                   | |   Z    | |         |
+---+--------+--+------------+--+---------+--+ |   o    | |         |
|   +--------+  +------------+  +---------+  | |   o    | |         |
|   | Mina   |  |   Spring   |  |Hibernate|  | |   k    | +---------+
|   +--------+  +------------+  +---------+  | |   e    | |         |
+--------------------------------------------+ |   e    | |         |
+--------------------------------------------+ |   p    | |         |
|                Base Service                | |   e    | |         |
+-+---------+--+---------------+-+---------+-+ |   r    | |   App   |
| +---------+  +---------------+ +---------+ | |        | |         |
| |   MQ    |  |     Cache     | |  Data   | | |        | |         |
| +---------+  +---------------+ +---------+ | |        | |         |
| |ActiveMQ |  |   Mencache    | |  Flume  | | |        | |         |
| +---------+  +--+--+---------+ +---------+ | |        | +---------+
| +---------+--+--+  +---------+-+---------+ | |        | |         |
| |    Search     |  |         HA          | | |        | |         |
| +---------------+  +---------------------+ | |        | |         |
| |  Solr/Lucene  |  | Zookeeper/Heartbeat | | |        | |         |
| +---------------+  +---------------------+ | |        | |         |
+--------------------------------------------+ |        | | Service |
+--------------------------------------------+ |        | |         |
|                  Database                  | |        | |         |
+--+--------------+-----+-----------------+--+ |        | |         |
|  +--------------+     +-----------------+  | |        | |         |
|  | Oracle/MySql |     |  mongodb/redis  |  | |        | |         |
|  +--------------+     +-----------------+  | |        | |         |
+--+--------------+-----+-----------------+--+ +--------+ +---------+

{% endhighlight %}

> 剖析架构

<font color="#fa8072">1）CDN</font>

{% highlight html %}

一般电子商务平台都会用CDN做网络服务。我们公司使用的是第三方CND，第三方CDN有很多种，如蓝汛、网宿、快网等。

{% endhighlight %}

<font color="#fa8072">2）负载均衡、反向代理</font>

{% highlight html %}

一般大型的电子商务平台都会有不同的业务域和不同的集群服务。一般都是DNS做域名解析的分发、轮询，DNS方式简单，因为Cache而缺乏灵活性。  
一般基于商用的硬件F5或者LVS等开源负载做分发，都采取主备方式。  
分发到业务集群上后，会经过web服务器如nginx做负载均衡或者反向代理分发到集群中的应用节点。  
---------------------------------------------------------------------------------------------------------------------
关于负载，需要综合考虑的几个因素：  
1. 是否满足高并发高性能  
2. Session如何保持  
3. 是否支持压缩  
4. 负载均衡的算法如何  
常用的负载均衡软件，如LVS、Nginx、HAProxy等。我们公司使用的是LVS+Nginx这种方式，Nginx基于iphash的Session黏贴。

{% endhighlight %}

<font color="#fa8072">3）App接入</font>

{% highlight html %}

应用层运行在Jboss或者Tomcat容器中，代表独立的系统，比如前端购物、后端系统、手机端服务等等。  
---------------------------------------------------------------------------------------------------------------------
关于应用层容器，需要综合考虑的几个因素：
1. 是否采用servlet3.0异步servlet来提高整个系统的吞吐量  
2. app接入节点宕机，session随之丢失问题  
3. session的集中式存储如何水平扩展  
我们公司应用层容器之前是使用的weblogic，现在使用的是tomcat。多个tomcat之间集群Session共享。

{% endhighlight %}

<font color="#fa8072">4）业务服务</font>

{% highlight html %}

对于电子商务平台而言，涉及的领域有用户、商品、订单、红包、活动、秒杀、支付业务等等，模块划分和接口设计非常重要。
---------------------------------------------------------------------------------------------------------------------
关于服务层，需要综合考虑的几个因素：
1. 是否使用NIO通讯框架netty、mina等，实现高并发  
2. 是否部署多个节点做冗余，从而提高服务层的高可用性，并自动进行负载转发和失效转移   
我们公司的业务是混合在一起的，没有一个个都做到模块化。

{% endhighlight %}

<font color="#fa8072">5）基础服务中间件</font>

{% highlight html %}



{% endhighlight %}

<font color="#fa8072">6）数据存储</font>

{% highlight html %}



{% endhighlight %}

<font color="#fa8072">7）管理与部署配置</font>

{% highlight html %}



{% endhighlight %}

<font color="#fa8072">8）监控、统计</font>

{% highlight html %}



{% endhighlight %}

-----------------------
